{"mappings":"oeAKA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,YAAaJ,SAASC,cAAc,iBACpCI,kBAAmBL,SAASC,cAAc,WAM5C,SAASK,EAAaC,GACpBA,EAAIC,iBACJC,QAAQC,IAAI,MAAOH,GAEnBE,QAAQC,IAAI,oBAAqBH,EAAII,eAQrC,IAAIC,EAAQC,OAAOf,EAAKI,WAAWY,OACnC,MAAMC,EAAOF,OAAOf,EAAKK,UAAUW,OAC7BE,EAASH,OAAOf,EAAKM,YAAYU,OAEvCL,QAAQC,IAAI,QAASE,GACrBH,QAAQC,IAAI,OAAQK,GACpBN,QAAQC,IAAI,SAAUM,GACtBT,EAAII,cAAcM,aAAa,YAAY,GAC3CC,YAAW,KACTpB,EAAKO,kBAAkBc,gBAAgB,eACrCP,EAAMG,GAAMC,GAEhB,IAAK,IAAII,EAAW,EAAGA,GAAYJ,EAAQI,GAAU,EACnDR,GAASG,EACTM,EAAcD,EAAUR,GACrBU,MAAK,EAACC,SAAEA,EAAQC,MAAEA,KACnBN,YAAW,KACTtB,EAAA6B,OAAOC,QAAQ,uBAAqBH,QAAiBC,SACtDA,KACAG,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,KACpBN,YAAW,KACTtB,EAAA6B,OAAOG,QAAQ,sBAAoBL,QAAeC,MAAW,CACzDK,SAAS,MACZL,KAIT,SAASH,EAAcE,EAAUC,GAC/B,MAAMM,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEV,E,MAAUC,GAClC,OAAO,IAAIU,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAEVG,EAAOH,MAjDXnC,EAAKC,OAAOsC,iBAAiB,SAAU/B,GACvCR,EAAKO,kBAAkBgC,iBAAiB,QAAS/B","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию \n// createPromise(position, delay) столько раз, сколько ввели в поле amount.\n// При каждом вызове передай ей номер создаваемого промиса(position)\n// и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=delay]'),\n  inputStep: document.querySelector('[name=step]'),\n  inputAmount: document.querySelector('[name=amount]'), \n  btnCreatePromises: document.querySelector('button'),\n}\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\nrefs.btnCreatePromises.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  console.log('EVT', evt);\n  // console.log('EVT Target', evt.target);\n  console.log('evt.currentTarget', evt.currentTarget);\n  // console.log('refs.inputStep.value', refs.inputStep.value);\n  // console.log('refs.inputDelay.value', refs.inputDelay);\n\n  // let delay = Number(evt.currentTarget.delay.value);\n  // const step = Number(evt.currentTarget.step.value);\n  // const amount = Number(evt.currentTarget.amount.value);\n\n  let delay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n  \n  console.log('delay', delay)\n  console.log('step', step)\n  console.log('amount', amount)\n  evt.currentTarget.setAttribute('disabled', true);\n  setTimeout(() => {\n    refs.btnCreatePromises.removeAttribute('disabled');\n  }, (delay+step)*amount);\n\n  for (let position = 1; position <= amount; position+=1) {\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) =>\n      setTimeout(() => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }, delay))\n      .catch(({ position, delay }) =>\n      setTimeout(() => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n          { useIcon: false });\n      }, delay));\n  }   \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n   \n  }); \n  \n}\n// function removeEventListenerSubmit(evt) {\n//   console.log('removeEventListenerSubmit()',evt)\n//   refs.formEl.removeEventListener('submit', onFormSubmit);\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputDelay","inputStep","inputAmount","btnCreatePromises","$47d4ff9957288465$var$onFormSubmit","evt","preventDefault","console","log","currentTarget","delay1","Number","value","step","amount","setAttribute","setTimeout","removeAttribute","position1","$47d4ff9957288465$var$createPromise","then","position","delay","Notify","success","catch","failure","useIcon","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","addEventListener"],"version":3,"file":"03-promises.310d965c.js.map"}